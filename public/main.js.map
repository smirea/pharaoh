{"version":3,"sources":["webpack:///webpack/bootstrap bbbb0f5f569ce4a8ffd9","webpack:///./src/main.js","webpack:///./src/classes/Engine.js","webpack:///./src/classes/World.js","webpack:///./src/classes/Entity.js","webpack:///./src/classes/Unit.js","webpack:///./src/classes/infrastructure/Road.js","webpack:///./src/utils/constants.js","webpack:///./src/utils/path.js","webpack:///./src/classes/tiles/Tile.js","webpack:///./src/classes/tiles/DirtTile.js","webpack:///./src/classes/HouseIndex.js","webpack:///./src/classes/Building.js","webpack:///./src/classes/PoliceStation.js"],"names":["HouseIndex","engine","fps","world","width","height","road","w","pos","direction","size","end","fill","roadChain","sections","forEach","index","dir","RIGHT","DOWN","LEFT","UP","add_entity","SmallHouse","add_unit","print","window","interval","setInterval","step","Engine","options","World","units","layers","build_layer","layer_map","key","map","value","result","row","col_index","push","x","y","instance","remove_unit","on_add_to_world","indexOf","splice","on_remove_from_world","klass","error","can_add_to_world","console","HEIGHT","col","WIDTH","entity","aX","aY","bX","bY","Error","is_out_of_bounds","row_inc","col_inc","unit","clear","matrix","styles","get_units","filter","tmp","bg","char","length","constructor","COLOR","obj","join","log","Entity","stats","desirability","fire","damage","crime","stat","callback","start_row","Math","max","end_row","min","start_col","end_col","outer","Unit","is_road","each_adjacent","EFFECT_RADIUS","targets","get_affected_entities","Object","keys","EFFECTS","stat_value","Array","isArray","distance","add_stat","step_move","step_act","dirs","get_road_directions","name","floor","random","move","apply_effects","Road","DIR","get_distance","abs","Tile","DirtTile","House","get_adjacent_road","warn","VacantLot","MediumHouse","LargeHouse","Building","PoliceStation","Policeman"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bbbb0f5f569ce4a8ffd9","/* @flow */\n\nimport Engine from 'classes/Engine';\nimport World from 'classes/World';\nimport {DIR} from 'utils/constants';\nimport {move} from 'utils/path';\n\nimport Entity from 'classes/Entity';\nimport Road from 'classes/infrastructure/Road';\nimport * as HouseIndex from 'classes/HouseIndex';\n\nimport {Policeman} from 'classes/PoliceStation';\n\nconst engine = new Engine({\n    fps: 30,\n    world: {\n        width: 12,\n        height: 14,\n    }\n});\n\nconst road = (w:World, pos:Coordinate, direction:number, size:number) : Coordinate => {\n    --size;\n    const end = move(pos, direction, size);\n    w.fill(pos, end, Road);\n    return end;\n}\n\nconst roadChain = (w:World, pos:Coordinate, ...sections:Array<[number, number]>) => {\n    sections.forEach(([dir, size], index) => {\n        if (index > 0) pos = move(pos, dir);\n        pos = road(w, pos, dir, size);\n    });\n}\n\nroadChain(engine.world, [2, 4], [DIR.RIGHT, 7], [DIR.DOWN, 6], [DIR.LEFT, 6], [DIR.UP, 5]);\nroadChain(engine.world, [5, 5], [DIR.DOWN, 5]);\nroadChain(engine.world, [3, 7], [DIR.RIGHT, 2]);\nroadChain(engine.world, [6, 7], [DIR.RIGHT, 2]);\nengine.world.add_entity([3, 3], HouseIndex.SmallHouse);\nengine.world.add_unit(new Policeman(engine.world, [3, 4]));\nengine.world.add_unit(new Policeman(engine.world, [5, 8]));\nengine.world.print();\nwindow.interval = setInterval(() => {engine.step();}, 250);\n\nwindow.engine = engine;\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","/* @flow */\n\nimport World from 'classes/World';\n\ntype engineOptions = {\n    fps: number,\n    world: {\n        width: number,\n        height: number,\n    },\n};\n\nexport default class Engine {\n\n    world: World;\n    options: engineOptions;\n\n    constructor (options:engineOptions) {\n        this.options = options;\n        this.world = new World(options.world.width, options.world.height);\n    }\n\n    start () {}\n\n    stop () {}\n\n    step () {\n        this.world.step();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/Engine.js","/* @flow */\n\nimport Entity from 'classes/Entity';\nimport Unit from 'classes/Unit';\nimport Tile from 'classes/tiles/Tile';\nimport DirtTile from 'classes/tiles/DirtTile';\nimport {DIR} from 'utils/constants';\n\ntype Layer<T> = {\n    key: string,\n    map: Array<Array<T>>\n};\n\ntype layer_map_t = $Shape<{\n    tile: Array<Array<Tile>>,\n    entity: Array<Array<Entity>>,\n}>\n\nexport default class World {\n\n    data: Array<Array<Entity>>;\n    width: number;\n    height: number;\n    layers: Array<Layer>;\n    layer_map: layer_map_t;\n    units: Array<Unit>;\n\n    constructor (width:number, height:number) {\n        this.width = width;\n        this.height = height;\n        this.units = [];\n        this.layers = [\n            this.build_layer('tile', () => new DirtTile()),\n            this.build_layer('entity', null),\n        ];\n        this.layer_map = {};\n        this.layers.forEach(({key, map}) => this.layer_map[key] = map);\n    }\n\n    build_layer (key:$Keys<layer_map_t>, value:any) : Layer {\n        const result = {key, map: []};\n        for (let index = 0; index < this.height; ++index) {\n            const row = [];\n            for (let col_index = 0; col_index < this.width; ++col_index) {\n                row.push(typeof value === 'function' ? value(index, col_index) : value);\n            }\n            result.map.push(row);\n        }\n        return result;\n    }\n\n    is_out_of_bounds ([x, y]:Coordinate) : boolean {\n        return x < 0 || x >= this.width || y < 0 || y >= this.height;\n    }\n\n    add_unit (instance:Unit) : boolean {\n        this.remove_unit(instance);\n        this.units.push(instance);\n        instance.on_add_to_world();\n        return true;\n    }\n\n    remove_unit (instance:Unit) {\n        const index = this.units.indexOf(instance);\n        if (index === -1) return;\n        this.units.splice(index, 1);\n        instance.on_remove_from_world();\n    }\n\n    add_entity<T:Entity> (pos:Coordinate, klass:Class<T>) : ?T {\n        const [x, y] = pos;\n        const error = klass.can_add_to_world(this, pos);\n        if (error) {\n            console.error(error);\n            return null;\n        }\n        const instance = new klass(this, pos);\n        for (let row = 0; row < klass.HEIGHT; ++row) {\n            for (let col = 0; col < klass.WIDTH; ++col) {\n                this.layer_map.entity[y + row][x + col] = instance;\n            }\n        }\n        instance.on_add_to_world(this, pos);\n        return instance;\n    }\n\n    fill<T:Entity> ([aX, aY]:Coordinate, [bX, bY]:Coordinate, klass:Class<T>) : World {\n        if (klass.WIDTH != 1 || klass.HEIGHT != 1) {\n            throw new Error('Can only fill with instances of size 1x1: \"`${klass.name}`\"');\n        }\n        if (this.is_out_of_bounds([aX, aY])) throw new Error('Invalid starting position');\n        if (this.is_out_of_bounds([bX, bY])) throw new Error('Invalid ending position');\n        const row_inc = aY < bY ? 1 : -1;\n        const col_inc = aX < bX ? 1 : -1;\n        for (let row = aY; row_inc > 0 ? row <= bY : row >= bY; row += row_inc) {\n            for (let col = aX; col_inc > 0 ? col <= bX : col >= bX; col += col_inc) {\n                this.add_entity([col, row], klass);\n            }\n        }\n        return this;\n    }\n\n    step () {\n        this.units.forEach((unit) => {\n            unit.step();\n        });\n        console.clear();\n        this.print();\n    }\n\n    print () : World {\n        let matrix = [];\n        const styles = [];\n\n        const get_units = (x, y) => {\n            return this.units.filter(({pos}) => pos[0] === x && pos[1] === y);\n        }\n\n        for (let row = -1; row < this.height; ++row) {\n            const tmp = []\n            for (let col = -1; col < this.width; ++col) {\n                let bg = 'red';\n                let char = ' ';\n\n                if (row === -1 || col === -1) {\n                    bg = 'black'\n                    if (row !== col) {\n                        if (row === -1) {\n                            char = col % 10;\n                        } else {\n                            char = row % 10;\n                        }\n                    }\n                } else {\n                    const units = get_units(col, row);\n                    if (units.length) {\n                        char = units.length;\n                        bg = units[units.length - 1].constructor.COLOR;\n                    } else {\n                        for (let index = this.layers.length - 1; index >= 0; --index) {\n                            const obj = this.layers[index].map[row][col];\n                            if (obj) {\n                                bg = obj.constructor.COLOR;\n                                break;\n                            }\n                        }\n                    }\n                }\n                tmp.push(`%c${char}`);\n                styles.push(`\n                    color: #eee;\n                    background: ${bg};\n                    border-left: 1px solid #aaa;\n                    text-decoration: underline;\n                `);\n            }\n            matrix.push(tmp.join(' '));\n        }\n        matrix = matrix.join('\\n');\n        console.log(matrix, ...styles);\n        return this;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/World.js","/* @flow */\n\nexport default class Entity {\n\n    static COLOR = 'black';\n    static WIDTH = 1;\n    static HEIGHT = 1;\n\n    pos:Coordinate;\n    world:World;\n    stats:{[key: $Keys<Stats>]: number};\n\n    constructor (world:World, pos:Coordinate) {\n        this.pos = pos;\n        this.world = world;\n\n        this.stats = {\n            desirability: 0,\n            fire: 0,\n            damage: 0,\n            crime: 0,\n        };\n    }\n\n    static can_add_to_world (world:World, [x, y]:Coordinate) : ?string {\n        for (let row = 0; row < this.HEIGHT; ++row) {\n            for (let col = 0; col < this.WIDTH; ++col) {\n                if (world.layer_map.entity[y + row][x + col]) return `Needs to be placed on an empty tile`;\n            }\n        }\n        return null;\n    }\n\n    on_add_to_world (world:World, [x, y]:Coordinate) : void {}\n\n    add_stat (stat:$Keys<Stats>, value:number) {\n        this.stats[stat] += value;\n    }\n\n    each_adjacent (size:number = 1, callback:(x:number, y:number) => ?boolean) : void {\n        const {WIDTH, HEIGHT} = this.constructor;\n        const [x, y] = this.pos;\n        const start_row = Math.max(0, y - size);\n        const end_row = Math.min(this.world.height, y + HEIGHT + size);\n        const start_col = Math.max(0, x - size);\n        const end_col = Math.min(this.world.width, x + WIDTH + size);\n        outer: for (let row = start_row; row < end_row; ++row) {\n            for (let col = start_col; col < end_col; ++col) {\n                if (col < x || col >= x + WIDTH || row < y || row >= y + HEIGHT) {\n                    if (callback(col, row) === false) break outer;\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/Entity.js","/* @flow */\n\nimport Entity from 'classes/Entity';\nimport Road from 'classes/infrastructure/Road';\nimport {DIR} from 'utils/constants';\nimport {move, get_distance} from 'utils/path';\n\nexport default class Unit extends Entity {\n\n    static COLOR:string = 'black';\n    static EFFECTS:Stats = {};\n    static EFFECT_RADIUS:number = 2;\n\n    direction: number;\n\n    is_road (pos:Coordinate) : boolean {\n        if (this.world.is_out_of_bounds(pos)) return false;\n        return this.world.layer_map.entity[pos[1]][pos[0]] instanceof Road;\n    }\n\n    get_road_directions () : Array<number> {\n        const result = [];\n        if (this.is_road(move(this.pos, DIR.UP))) result.push(DIR.UP);\n        if (this.is_road(move(this.pos, DIR.RIGHT))) result.push(DIR.RIGHT);\n        if (this.is_road(move(this.pos, DIR.DOWN))) result.push(DIR.DOWN);\n        if (this.is_road(move(this.pos, DIR.LEFT))) result.push(DIR.LEFT);\n        return result;\n    }\n\n    get_affected_entities () : Array<Entity> {\n        const result = [];\n        this.each_adjacent(this.constructor.EFFECT_RADIUS, (x, y) => {\n            const entity = this.world.layer_map.entity[y][x];\n            if (entity) result.push(entity);\n        });\n        return result;\n    }\n\n    move () {\n        this.pos = move(this.pos, this.direction);\n    }\n\n    apply_effects () {\n        const targets = this.get_affected_entities();\n        Object.keys(this.constructor.EFFECTS).forEach((stat) => {\n            const value = this.constructor.EFFECTS[stat];\n            targets.forEach((entity) => {\n                let stat_value = 0;\n                if (Array.isArray(value)) {\n                    const distance = get_distance(this.pos, entity.pos);\n                    if (distance < value.length) {\n                        stat_value = value[distance];\n                    } else {\n                        stat_value = 0;\n                    }\n                } else {\n                    stat_value = value;\n                }\n                entity.add_stat(stat, stat_value);\n            });\n        })\n    }\n\n    step () {\n        this.step_move();\n        this.step_act();\n    }\n\n    step_move () {\n        const [x, y] = this.pos;\n        let dirs = this.get_road_directions();\n\n        if (!this.is_road(this.pos)) throw new Error(`${this.constructor.name} is not on a road`);\n\n        // If there are no roads to go to, don't do anything\n        if (!dirs.length) return;\n\n        if (this.direction) {\n            // It should never try to turn back if there is any other option\n            if (dirs.length > 1) dirs = dirs.filter((dir) => dir != this.direction * -1);\n        }\n\n        this.direction = dirs[Math.floor(Math.random() * dirs.length)];\n        this.move();\n    }\n\n    step_act () {\n        this.apply_effects();\n    }\n\n    on_add_to_world () {}\n\n    on_remove_from_world () {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/Unit.js","/* @flow */\n\nimport Entity from 'classes/Entity';\n\nexport default class Road extends Entity {\n    static COLOR = 'brown';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/infrastructure/Road.js","/* @flow */\n\nexport const DIR = {\n    UP: 1,\n    RIGHT: 2,\n    DOWN: -1,\n    LEFT: -2,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/constants.js","/* @flow */\n\nimport {DIR} from 'utils/constants';\n\nexport const move = ([x, y]:Coordinate, direction:number, size:number = 1) : Coordinate => {\n    switch (direction) {\n        case DIR.UP: y -= size; break;\n        case DIR.RIGHT: x += size; break;\n        case DIR.DOWN: y += size; break;\n        case DIR.LEFT: x -= size; break;\n        default: throw new Error(`Invalid direction \"${direction}\"`);\n    }\n    return [x, y];\n}\n\n\n/**\n * Returns the Manhattan distance between two points\n * @param  {Coordinate} start\n * @param  {Coordinate} end\n * @return {Number}\n */\nexport const get_distance = ([aX, aY]:Coordinate, [bX, bY]:Coordinate) : number => {\n    return Math.abs(aX - bX) + Math.abs(aY - bY);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/path.js","/* @flow */\n\nimport World from 'classes/World';\n\nexport default class Tile {\n    static COLOR = 'black';\n    static WIDTH = 1;\n    static HEIGHT = 1;\n\n    can_add_to_world (world:World, [x, y]:Coordinate) : ?string {\n        if (world.layer_map.entity[y][x]) return `Tile already exists at [${x}, ${y}]`;\n        return null;\n    }\n\n    on_add_to_world (world:any, pos: any) : void {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/tiles/Tile.js","/* @flow */\n\nimport Tile from 'classes/tiles/Tile';\n\nexport default class DirtTile extends Tile {\n    static COLOR = 'white';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/tiles/DirtTile.js","/* @flow */\n\nimport World from 'classes/World';\nimport Building from 'classes/Building';\nimport Road from 'classes/infrastructure/Road';\n\nexport class House extends Building {\n    static COLOR = 'orange';\n\n    on_add_to_world () {\n        if (!this.get_adjacent_road()) console.warn(`${this.constructor.name} must be placed near a road`);\n    }\n}\n\nexport class VacantLot extends House {}\n\nexport class SmallHouse extends House {}\n\nexport class MediumHouse extends House {\n    static WIDTH = 2;\n    static HEIGHT = 2;\n}\nexport class LargeHouse extends House {\n    static WIDTH = 3;\n    static HEIGHT = 3;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/HouseIndex.js","/* @flow */\n\nimport Entity from 'classes/Entity';\nimport Road from 'classes/infrastructure/Road';\n\nexport default class Building extends Entity {\n\n    get_adjacent_road () : ?Road {\n        const [x, y] = this.pos;\n        let result = null;\n        this.each_adjacent(1, (x, y) => {\n            const entity = this.world.layer_map.entity[y][x];\n            if (entity instanceof Road) {\n                result = entity;\n                return false;\n            }\n        });\n        return result;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/Building.js","/* @flow */\n\nimport Building from 'classes/Building';\nimport Unit from 'classes/Unit';\n\nexport default class PoliceStation extends Building {\n    static COLOR = 'black';\n}\n\nexport class Policeman extends Unit {\n    static COLOR = 'blue';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/PoliceStation.js"],"sourceRoot":""}