{"version":3,"sources":["webpack:///webpack/bootstrap bbbb0f5f569ce4a8ffd9?04de","webpack:///./test.bundle.js","webpack:///./src/classes/World.js?c32c","webpack:///./src/classes/Entity.js?4f61","webpack:///./src/classes/Unit.js?5bff","webpack:///./src/classes/infrastructure/Road.js?1ca2","webpack:///./src/utils/constants.js?14df","webpack:///./src/utils/path.js?c45d","webpack:///./src/classes/tiles/Tile.js?8931","webpack:///./src/classes/tiles/DirtTile.js?6465","webpack:///./test .*-test\\.js$","webpack:///./test/classes/Entity-test.js","webpack:///./test/classes/World-test.js"],"names":["req","keys","forEach","World","width","height","units","layers","build_layer","layer_map","key","map","value","result","index","row","col_index","push","x","y","instance","remove_unit","on_add_to_world","indexOf","splice","on_remove_from_world","pos","klass","error","can_add_to_world","console","HEIGHT","col","WIDTH","entity","aX","aY","bX","bY","Error","is_out_of_bounds","row_inc","col_inc","add_entity","unit","step","clear","print","matrix","styles","get_units","filter","tmp","bg","char","length","constructor","COLOR","obj","join","log","Entity","world","stats","desirability","fire","damage","crime","stat","size","callback","start_row","Math","max","end_row","min","start_col","end_col","outer","Unit","is_road","UP","RIGHT","DOWN","LEFT","each_adjacent","EFFECT_RADIUS","direction","targets","get_affected_entities","Object","EFFECTS","stat_value","Array","isArray","distance","add_stat","step_move","step_act","dirs","get_road_directions","name","dir","floor","random","move","apply_effects","Road","DIR","get_distance","abs","Tile","DirtTile","describe","beforeEach","it","expect","to","equal","effects","test_class","Test"],"mappings":"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","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bbbb0f5f569ce4a8ffd9","// require('babel-polyfill');\n\n// Recursively require all polyfills\nconst req = require.context('./test/', true, /.*-test\\.js$/);\nreq.keys().forEach(req);\n\n\n\n// WEBPACK FOOTER //\n// ./test.bundle.js","/* @flow */\n\nimport Entity from 'classes/Entity';\nimport Unit from 'classes/Unit';\nimport Tile from 'classes/tiles/Tile';\nimport DirtTile from 'classes/tiles/DirtTile';\nimport {DIR} from 'utils/constants';\n\ntype Layer<T> = {\n    key: string,\n    map: Array<Array<T>>\n};\n\ntype layer_map_t = $Shape<{\n    tile: Array<Array<Tile>>,\n    entity: Array<Array<Entity>>,\n}>\n\nexport default class World {\n\n    data: Array<Array<Entity>>;\n    width: number;\n    height: number;\n    layers: Array<Layer>;\n    layer_map: layer_map_t;\n    units: Array<Unit>;\n\n    constructor (width:number, height:number) {\n        this.width = width;\n        this.height = height;\n        this.units = [];\n        this.layers = [\n            this.build_layer('tile', () => new DirtTile()),\n            this.build_layer('entity', null),\n        ];\n        this.layer_map = {};\n        this.layers.forEach(({key, map}) => this.layer_map[key] = map);\n    }\n\n    build_layer (key:$Keys<layer_map_t>, value:any) : Layer {\n        const result = {key, map: []};\n        for (let index = 0; index < this.height; ++index) {\n            const row = [];\n            for (let col_index = 0; col_index < this.width; ++col_index) {\n                row.push(typeof value === 'function' ? value(index, col_index) : value);\n            }\n            result.map.push(row);\n        }\n        return result;\n    }\n\n    is_out_of_bounds ([x, y]:Coordinate) : boolean {\n        return x < 0 || x >= this.width || y < 0 || y >= this.height;\n    }\n\n    add_unit (instance:Unit) : boolean {\n        this.remove_unit(instance);\n        this.units.push(instance);\n        instance.on_add_to_world();\n        return true;\n    }\n\n    remove_unit (instance:Unit) {\n        const index = this.units.indexOf(instance);\n        if (index === -1) return;\n        this.units.splice(index, 1);\n        instance.on_remove_from_world();\n    }\n\n    add_entity<T:Entity> (pos:Coordinate, klass:Class<T>) : ?T {\n        const [x, y] = pos;\n        const error = klass.can_add_to_world(this, pos);\n        if (error) {\n            console.error(error);\n            return null;\n        }\n        const instance = new klass(this, pos);\n        for (let row = 0; row < klass.HEIGHT; ++row) {\n            for (let col = 0; col < klass.WIDTH; ++col) {\n                this.layer_map.entity[y + row][x + col] = instance;\n            }\n        }\n        instance.on_add_to_world(this, pos);\n        return instance;\n    }\n\n    fill<T:Entity> ([aX, aY]:Coordinate, [bX, bY]:Coordinate, klass:Class<T>) : World {\n        if (klass.WIDTH != 1 || klass.HEIGHT != 1) {\n            throw new Error('Can only fill with instances of size 1x1: \"`${klass.name}`\"');\n        }\n        if (this.is_out_of_bounds([aX, aY])) throw new Error('Invalid starting position');\n        if (this.is_out_of_bounds([bX, bY])) throw new Error('Invalid ending position');\n        const row_inc = aY < bY ? 1 : -1;\n        const col_inc = aX < bX ? 1 : -1;\n        for (let row = aY; row_inc > 0 ? row <= bY : row >= bY; row += row_inc) {\n            for (let col = aX; col_inc > 0 ? col <= bX : col >= bX; col += col_inc) {\n                this.add_entity([col, row], klass);\n            }\n        }\n        return this;\n    }\n\n    step () {\n        this.units.forEach((unit) => {\n            unit.step();\n        });\n        console.clear();\n        this.print();\n    }\n\n    print () : World {\n        let matrix = [];\n        const styles = [];\n\n        const get_units = (x, y) => {\n            return this.units.filter(({pos}) => pos[0] === x && pos[1] === y);\n        }\n\n        for (let row = -1; row < this.height; ++row) {\n            const tmp = []\n            for (let col = -1; col < this.width; ++col) {\n                let bg = 'red';\n                let char = ' ';\n\n                if (row === -1 || col === -1) {\n                    bg = 'black'\n                    if (row !== col) {\n                        if (row === -1) {\n                            char = col % 10;\n                        } else {\n                            char = row % 10;\n                        }\n                    }\n                } else {\n                    const units = get_units(col, row);\n                    if (units.length) {\n                        char = units.length;\n                        bg = units[units.length - 1].constructor.COLOR;\n                    } else {\n                        for (let index = this.layers.length - 1; index >= 0; --index) {\n                            const obj = this.layers[index].map[row][col];\n                            if (obj) {\n                                bg = obj.constructor.COLOR;\n                                break;\n                            }\n                        }\n                    }\n                }\n                tmp.push(`%c${char}`);\n                styles.push(`\n                    color: #eee;\n                    background: ${bg};\n                    border-left: 1px solid #aaa;\n                    text-decoration: underline;\n                `);\n            }\n            matrix.push(tmp.join(' '));\n        }\n        matrix = matrix.join('\\n');\n        console.log(matrix, ...styles);\n        return this;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/World.js","/* @flow */\n\nexport default class Entity {\n\n    static COLOR = 'black';\n    static WIDTH = 1;\n    static HEIGHT = 1;\n\n    pos:Coordinate;\n    world:World;\n    stats:{[key: $Keys<Stats>]: number};\n\n    constructor (world:World, pos:Coordinate) {\n        this.pos = pos;\n        this.world = world;\n\n        this.stats = {\n            desirability: 0,\n            fire: 0,\n            damage: 0,\n            crime: 0,\n        };\n    }\n\n    static can_add_to_world (world:World, [x, y]:Coordinate) : ?string {\n        for (let row = 0; row < this.HEIGHT; ++row) {\n            for (let col = 0; col < this.WIDTH; ++col) {\n                if (world.layer_map.entity[y + row][x + col]) return `Needs to be placed on an empty tile`;\n            }\n        }\n        return null;\n    }\n\n    on_add_to_world (world:World, [x, y]:Coordinate) : void {}\n\n    add_stat (stat:$Keys<Stats>, value:number) {\n        this.stats[stat] += value;\n    }\n\n    each_adjacent (size:number = 1, callback:(x:number, y:number) => ?boolean) : void {\n        const {WIDTH, HEIGHT} = this.constructor;\n        const [x, y] = this.pos;\n        const start_row = Math.max(0, y - size);\n        const end_row = Math.min(this.world.height, y + HEIGHT + size);\n        const start_col = Math.max(0, x - size);\n        const end_col = Math.min(this.world.width, x + WIDTH + size);\n        outer: for (let row = start_row; row < end_row; ++row) {\n            for (let col = start_col; col < end_col; ++col) {\n                if (col < x || col >= x + WIDTH || row < y || row >= y + HEIGHT) {\n                    if (callback(col, row) === false) break outer;\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/Entity.js","/* @flow */\n\nimport Entity from 'classes/Entity';\nimport Road from 'classes/infrastructure/Road';\nimport {DIR} from 'utils/constants';\nimport {move, get_distance} from 'utils/path';\n\nexport default class Unit extends Entity {\n\n    static COLOR:string = 'black';\n    static EFFECTS:Stats = {};\n    static EFFECT_RADIUS:number = 2;\n\n    direction: number;\n\n    is_road (pos:Coordinate) : boolean {\n        if (this.world.is_out_of_bounds(pos)) return false;\n        return this.world.layer_map.entity[pos[1]][pos[0]] instanceof Road;\n    }\n\n    get_road_directions () : Array<number> {\n        const result = [];\n        if (this.is_road(move(this.pos, DIR.UP))) result.push(DIR.UP);\n        if (this.is_road(move(this.pos, DIR.RIGHT))) result.push(DIR.RIGHT);\n        if (this.is_road(move(this.pos, DIR.DOWN))) result.push(DIR.DOWN);\n        if (this.is_road(move(this.pos, DIR.LEFT))) result.push(DIR.LEFT);\n        return result;\n    }\n\n    get_affected_entities () : Array<Entity> {\n        const result = [];\n        this.each_adjacent(this.constructor.EFFECT_RADIUS, (x, y) => {\n            const entity = this.world.layer_map.entity[y][x];\n            if (entity) result.push(entity);\n        });\n        return result;\n    }\n\n    move () {\n        this.pos = move(this.pos, this.direction);\n    }\n\n    apply_effects () {\n        const targets = this.get_affected_entities();\n        Object.keys(this.constructor.EFFECTS).forEach((stat) => {\n            const value = this.constructor.EFFECTS[stat];\n            targets.forEach((entity) => {\n                let stat_value = 0;\n                if (Array.isArray(value)) {\n                    const distance = get_distance(this.pos, entity.pos);\n                    if (distance < value.length) {\n                        stat_value = value[distance];\n                    } else {\n                        stat_value = 0;\n                    }\n                } else {\n                    stat_value = value;\n                }\n                entity.add_stat(stat, stat_value);\n            });\n        })\n    }\n\n    step () {\n        this.step_move();\n        this.step_act();\n    }\n\n    step_move () {\n        const [x, y] = this.pos;\n        let dirs = this.get_road_directions();\n\n        if (!this.is_road(this.pos)) throw new Error(`${this.constructor.name} is not on a road`);\n\n        // If there are no roads to go to, don't do anything\n        if (!dirs.length) return;\n\n        if (this.direction) {\n            // It should never try to turn back if there is any other option\n            if (dirs.length > 1) dirs = dirs.filter((dir) => dir != this.direction * -1);\n        }\n\n        this.direction = dirs[Math.floor(Math.random() * dirs.length)];\n        this.move();\n    }\n\n    step_act () {\n        this.apply_effects();\n    }\n\n    on_add_to_world () {}\n\n    on_remove_from_world () {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/Unit.js","/* @flow */\n\nimport Entity from 'classes/Entity';\n\nexport default class Road extends Entity {\n    static COLOR = 'brown';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/infrastructure/Road.js","/* @flow */\n\nexport const DIR = {\n    UP: 1,\n    RIGHT: 2,\n    DOWN: -1,\n    LEFT: -2,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/constants.js","/* @flow */\n\nimport {DIR} from 'utils/constants';\n\nexport const move = ([x, y]:Coordinate, direction:number, size:number = 1) : Coordinate => {\n    switch (direction) {\n        case DIR.UP: y -= size; break;\n        case DIR.RIGHT: x += size; break;\n        case DIR.DOWN: y += size; break;\n        case DIR.LEFT: x -= size; break;\n        default: throw new Error(`Invalid direction \"${direction}\"`);\n    }\n    return [x, y];\n}\n\n\n/**\n * Returns the Manhattan distance between two points\n * @param  {Coordinate} start\n * @param  {Coordinate} end\n * @return {Number}\n */\nexport const get_distance = ([aX, aY]:Coordinate, [bX, bY]:Coordinate) : number => {\n    return Math.abs(aX - bX) + Math.abs(aY - bY);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/path.js","/* @flow */\n\nimport World from 'classes/World';\n\nexport default class Tile {\n    static COLOR = 'black';\n    static WIDTH = 1;\n    static HEIGHT = 1;\n\n    can_add_to_world (world:World, [x, y]:Coordinate) : ?string {\n        if (world.layer_map.entity[y][x]) return `Tile already exists at [${x}, ${y}]`;\n        return null;\n    }\n\n    on_add_to_world (world:any, pos: any) : void {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/tiles/Tile.js","/* @flow */\n\nimport Tile from 'classes/tiles/Tile';\n\nexport default class DirtTile extends Tile {\n    static COLOR = 'white';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/tiles/DirtTile.js","var map = {\n\t\"./classes/Entity-test.js\": 14,\n\t\"./classes/World-test.js\": 15\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./test .*-test\\.js$\n// module id = 13\n// module chunks = 1","\nimport Entity from 'classes/Entity';\nimport World from 'classes/World';\n\ndescribe('Entity', function () {\n\n    beforeEach(() => {\n        this.world = new World(5, 5);\n        this.entity = this.world.add_entity([2, 2], Entity);\n    });\n\n    describe('can_add_to_world', () => {\n\n        beforeEach(() => {\n            this.each_adjacent = function (size = 1, entity=this.entity) {\n                let result = [];\n                entity.each_adjacent(size, (x, y) => { result.push(`${x}-${y}`); });\n                return result.join(' ');\n            };\n        });\n\n        it('return all neighbors', () => {\n            expect(this.each_adjacent()).to.equal('1-1 2-1 3-1 1-2 3-2 1-3 2-3 3-3');\n        });\n\n        it('handles missing sides', () => {\n            this.entity.pos = [1, 0];\n            expect(this.each_adjacent()).to.equal('0-0 2-0 0-1 1-1 2-1');\n        });\n\n        it('handles top left corner', () => {\n            this.entity.pos = [0, 0];\n            expect(this.each_adjacent()).to.equal('1-0 0-1 1-1');\n        });\n\n        it('handles bottom right corner', () => {\n            this.entity.pos = [4, 4];\n            expect(this.each_adjacent()).to.equal('3-3 4-3 3-4');\n        });\n\n        it('handles no neighbors (kinda useless though', () => {\n            const world = new World(1, 1);\n            const entity = new Entity(world, [0, 0]);\n            expect(this.each_adjacent(null, entity)).to.equal('');\n        });\n\n        it('handles size 2', () => {\n            expect(this.each_adjacent(2)).to.equal('0-0 1-0 2-0 3-0 4-0 0-1 1-1 2-1 3-1 4-1 0-2 1-2 3-2 4-2 0-3 1-3 2-3 3-3 4-3 0-4 1-4 2-4 3-4 4-4');\n        });\n\n        it('handles size 0', () => {\n            expect(this.each_adjacent(0)).to.equal('');\n        });\n\n    });\n\n    describe('apply_effects', () => {\n\n        beforeEach(() => {\n            this.effects = {};\n            this.test_class = class Test extends Entity {\n                static EFFECTS = this.effects;\n                static EFFECT_RADIUS = 2;\n            };\n            this.entity = this.world.add_entity([2, 2], Test);\n        });\n\n    });\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./test/classes/Entity-test.js","import Entity from 'classes/Entity';\nimport World from 'classes/World';\n\ndescribe('Entity', function () {\n\n    beforeEach(() => {\n        this.world = new World(5, 5);\n    });\n\n    describe('add_unit', () => {\n\n\n\n    });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./test/classes/World-test.js"],"sourceRoot":""}